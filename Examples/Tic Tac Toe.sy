import 'libc.sy';

using char as Slot;

void printBoard(Slot* board)
{
	uint i = 0;
	while i < 9
	{
		printf('%hc|%hc|%hc\n', board[i + 0], board[i + 1], board[i + 2]);
		i = i + 3;
	}
}

bool winner(Slot* board, Slot turn)
{
	if board[0] == turn
	{
		if board[1] == turn & board[2] == turn ->
			ret true;
		if board[4] == turn & board[8] == turn ->
			ret true;
		if board[3] == turn & board[6] == turn ->
			ret true;
	}
	
	if board[4] == turn
	{
		if board[3] == turn & board[5] == turn ->
			ret true;
		if board[1] == turn & board[7] == turn ->
			ret true;
		if board[2] == turn & board[6] == turn ->
			ret true;
	}
	
	if board[8] == turn
	{
		if board[2] == turn & board[5] == turn ->
			ret true;
		if board[6] == turn & board[7] == turn ->
			ret true;
	}
	
	ret false;
}

bool move(Slot* board, Slot turn)
{
	printBoard(board);
	uint $move;
	printf('\'%hc\', where do you wanna move? 1-9\n> ', turn);
	scanf('%u', @$move);
	$move = $move - 1;
	
	if $move < 0
	{
		print('Must be between 1-9\n');
		move(board, turn);
		ret false;
	}
	else if $move >= 9
	{
		print('Must be between 1-9\n');
		move(board, turn);
		ret false;
	}
	else if board[$move] == `X` | board[$move] == `O`
	{
		print('Choose an empty sqaure\n');
		move(board, turn);
		ret false;
	}
	
	print('');
	board[$move] = turn;
	ret winner(board, turn);
}

bool isTie(Slot* board)
{
	uint i = 0;
	while i < 9
	{
		if !(board[i] == `X` | board[i] == `O`) ->
			ret false;
		i = i + 3;
	}
	
	printBoard(board);
	print('It\'s a tie!');
	ret true;
}

void run()
{
	Slot* board = [
		`1`, `2`, `3`,
		`4`, `5`, `6`,
		`7`, `8`, `9`,
	];
	
	Slot turn = `X`;
	while true
	{
		if move(board, turn)
		{
			printBoard(board);
			printf('\'%hc\' won!\n', turn);
			ret;
		}
		
		if isTie(board) ->
			ret;
		
		if turn == `X` -> turn = `O`;
		else turn = `X`;
	}
}