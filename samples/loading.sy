using byte* as Module;
using byte as GLFWwindow;

decl Module LoadLibraryA(char* name);
decl byte* GetProcAddress(Module, char* name);
decl void puts(char*);

void loadGLFW() {
	
}

void(int)* glClear;
void(float, float, float, float)* glClearColor;
void(int, int, int, int)* glViewport;
void(int)* glBegin;
void()* glEnd;
void(float, float)* glVertex2f;
void(float, float, float)* glColor3f;

void loadGL() {
	Module gl = LoadLibraryA('opengl32');
	if (gl == null) {
		puts('gl not loaded');
		ret;
	}
	
	glClear = GetProcAddress(gl, 'glClear');
	glClearColor = GetProcAddress(gl, 'glClearColor');
	glViewport = GetProcAddress(gl, 'glViewport');
	glBegin = GetProcAddress(gl, 'glBegin');
	glEnd = GetProcAddress(gl, 'glEnd');
	glVertex2f = GetProcAddress(gl, 'glVertex2f');
	glColor3f = GetProcAddress(gl, 'glColor3f');
}