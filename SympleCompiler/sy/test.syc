myVar$ = 4 ; Set stack value of myVar to 0
out1$ = 8 ; Set stack value of out1 to 4
myOther$ = 12 ; Set stack value of myOther to 8
out2$ = 16 ; Set stack value of out2 to 12
main: ; Declare Function
	; Push Stack
	pushq %rbp
	movl %rsp, %rbp
	subq $4, %rsp ; Allocate 4 bytes to the stack
	movl $69, -myVar$(%rdp) ; Set myVar to $69
	subq $4, %rsp ; Allocate 4 bytes to the stack
	movl -myVar$(#rdp), %eax
	addl $6, %eax
	movl %eax, -out1$(%rdp) ; Move operation into out1
	subq $4, %rsp ; Allocate 4 bytes to the stack
	movl -myVar$(#rdp), -myOther$(%rdp) ; Set myOther to -myVar$(#rdp)
	subq $4, %rsp ; Allocate 4 bytes to the stack
	movl -myOther$(#rdp), %eax
	addl $5, %eax
	movl %eax, -out2$(%rdp) ; Move operation into out2
	movl $0, %eax ; Return $0
	popq %rbp ; Pop Stack
	ret ; Exit Function
